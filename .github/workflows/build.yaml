name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 8 * * 2'

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        DRAKE_URL: ["https://drake-packages.csail.mit.edu/drake/nightly/drake-latest-bionic.tar.gz",
                    "https://drake-packages.csail.mit.edu/drake/nightly/drake-20211209-bionic.tar.gz"]
    env:
      PYTHONPATH: "/opt/drake/lib/python3.6/site-packages"
      ROS_PACKAGE_PATH: "/opt/drake/share/drake/examples"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      - name: "Install apt dependencies"
        run: "sudo apt-get update && sudo apt install libxml2-utils graphviz libgraphviz-dev"

      - name: "Download and install Drake."
        run: |
          curl -o drake.tar.gz ${{ matrix.DRAKE_URL }} && sudo tar -xzf drake.tar.gz -C /opt
          yes | sudo /opt/drake/share/drake/setup/install_prereqs

      - name: "Install python dependencies"
        run: |
          pip install wheel
          pip install -r requirements.txt
          pip install torch-sparse torch-scatter torch-cluster torch-spline-conv -f https://pytorch-geometric.com/whl/torch-1.9.1%2Bcu102.html
          pip install -e .

      - name: "Run tests"
        run: |
          source ./setup.sh
          pytest --pyargs spatial_scene_grammars --cov=./ --cov-report=xml --continue-on-collection-errors
      
      - name: "Codecov upload"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
          env_vars: OS,PYTHON,DRAKE_URL
          files: ./coverage.xml
          path_to_write_report: ./coverage/codecov_report.txt

      - run: echo "üçè This job's status is ${{ job.status }}."
